version: '3.8'

services:
  # API Gateway (Go Service)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=development
      - LOG_LEVEL=debug
      - NLP_SERVICE_URL=http://nlp:8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=secura
      - DB_PASSWORD=securapassword
      - DB_NAME=secura
      - BLOCKCHAIN_NODE_URL=http://ganache:8545
      - BLOCKCHAIN_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000
      - JWT_SECRET=secura-dev-secret-key
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./api:/app
    depends_on:
      - postgres
      - nlp
      - ganache
    networks:
      - secura-network

  # NLP Anonymization Service (Python)
  nlp:
    build:
      context: ./nlp
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - SPACY_MODEL=en_core_web_sm
    volumes:
      - ./nlp:/app
    networks:
      - secura-network

  # Local Blockchain for Development (Ganache)
  ganache:
    image: trufflesuite/ganache-cli:latest
    ports:
      - "8545:8545"
    command: --deterministic --mnemonic "test test test test test test test test test test test junk" --networkId 5777 --chainId 1337
    volumes:
      - ganache-data:/data
    networks:
      - secura-network

  # Deploy Smart Contracts
  truffle-migrate:
    build:
      context: ./blockchain
      dockerfile: Dockerfile.deploy
    volumes:
      - ./blockchain:/app
    depends_on:
      - ganache
    networks:
      - secura-network
    command: ["sh", "-c", "sleep 5 && npm run migrate:ganache"]

  # Database (PostgreSQL)
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=secura
      - POSTGRES_PASSWORD=securapassword
      - POSTGRES_DB=secura
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - secura-network

  # Admin Dashboard (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - API_URL=http://api:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - secura-network

  # Database Migration Tool
  db-migrate:
    image: postgres:13
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=secura
      - DB_PASSWORD=securapassword
      - DB_NAME=secura
    volumes:
      - ./db/migrations:/migrations
      - ./scripts/db:/scripts
    depends_on:
      - postgres
    networks:
      - secura-network
    command: ["bash", "/scripts/migrate.sh", "up"]
    profiles:
      - tools

  # IPFS Node (for decentralized storage, optional for MVP)
  ipfs:
    image: ipfs/go-ipfs:latest
    ports:
      - "5001:5001"
      - "8081:8080"
    volumes:
      - ipfs-data:/data/ipfs
    networks:
      - secura-network

networks:
  secura-network:
    driver: bridge

volumes:
  postgres-data:
  ganache-data:
  ipfs-data: 